@startuml
!include style.puml
skinparam ArrowFontStyle plain

box Logic LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":AddressBookParser" as AddressBookParser LOGIC_COLOR
participant ":AssignCommandParser" as AssignCommandParser LOGIC_COLOR
participant "d:AssignCommand" as AssignCommand LOGIC_COLOR
participant "r:CommandResult" as CommandResult LOGIC_COLOR
end box

box Model MODEL_COLOR_T1
participant "m:Model" as Model MODEL_COLOR
end box

[-> LogicManager : execute("assign_category ...")
activate LogicManager

LogicManager -> AddressBookParser : parseCommand("assign_category ...")
activate AddressBookParser

create AssignCommandParser
AddressBookParser -> AssignCommandParser
activate AssignCommandParser

create AssignCommand
AssignCommandParser -> AssignCommand
activate AssignCommand

AssignCommand --> AssignCommandParser :
deactivate AssignCommand

AssignCommandParser --> AddressBookParser : d
deactivate AssignCommandParser

AssignCommandParser -[hidden]-> AddressBookParser
destroy AssignCommandParser

AddressBookParser --> LogicManager : d
deactivate AddressBookParser

LogicManager -> AssignCommand : execute(m)
activate AssignCommand

AssignCommand -> Model : getFilteredPersonList()
activate Model

Model --> AssignCommand
deactivate Model

AssignCommand -> Model : setPerson(personToEdit, editedPerson)
activate Model

Model --> AssignCommand
deactivate Model

AssignCommand -> Model : updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS)
activate Model

Model --> AssignCommand
deactivate Model

create CommandResult
AssignCommand -> CommandResult
activate CommandResult

CommandResult --> AssignCommand
deactivate CommandResult

AssignCommand --> LogicManager : r
deactivate AssignCommand

[<--LogicManager
deactivate LogicManager
@enduml
